const express = require("express");
const axios = require("axios");
const { API_KEY, BASE_URL_v1, BASE_URL_v1_4 } = require("./config");

const router = express.Router();

// üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
router.get("/search", async (req, res) => {
    try {
        const { query, page = 1, limit = 10, sortField = "rating", sortType = "-1" } = req.query;

        // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
        const params = {
            query,
            page,
            limit,
            sortField,
            sortType,
        };

        const response = await axios.get(`${BASE_URL_v1_4}/movie/search`, {
            headers: { "X-API-KEY": API_KEY },
            params,
        });

        res.json(response.data);  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API
    } catch (error) {
        res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
});



// üé• –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤
router.get("/genres", async (req, res) => {
    try {
        const response = await axios.get(`${BASE_URL_v1}/movie/possible-values-by-field`, {
            headers: { "X-API-KEY": API_KEY },
            params: { field: "genres.name" },
        });

        if (!Array.isArray(response.data)) {
            throw new Error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç API");
        }

        res.json(response.data);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∂–∞–Ω—Ä–æ–≤:", error.response?.data || error.message);
        res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
});

// üé• –ü–æ–¥–±–æ—Ä–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∂–∞–Ω—Ä—É
router.get("/movies-by-genre", async (req, res) => {
    try {
        const { genre, page = 1, limit = 10, sortField = "rating", sortType = "-1" } = req.query;

        // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
        const params = {
            "genres.name": genre,
            "rating.kp": "6-10",  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
            page,
            limit,
            sortField,
            sortType,
        };

        console.log("–ó–∞–ø—Ä–æ—Å –ø–æ –∂–∞–Ω—Ä—É:", genre, params); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

        const response = await axios.get(`${BASE_URL_v1_4}/movie`, {
            headers: { "X-API-KEY": API_KEY },
            params,
        });

        console.log("–û—Ç–≤–µ—Ç –æ—Ç API:", response.data); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞

        res.json(response.data);  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API
    } catch (error) {
        res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
});




module.exports = router;
